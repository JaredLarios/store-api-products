name: 'QA Pipeline'


on:
  push:
    branches: ['test']
  pull_request:
    branches: ['test']
    types: [synchronize, labeled, opened, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: Test
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v4.1.2
      - name: Setup Node 22
        uses: actions/setup-node@v6.0.0
        with:
          node-version: 22.14.0
      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install
      - name: Lint with Eslint
        run: |
          yarn run lint
      - name: Run Tests
        run: |
          yarn test

  analyze:
    needs: build
    uses: ./.github/workflows/code-analysis.yml
    with:
      language: 'javascript'

  deploy:
    needs: analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check if triggered by PR
        id: check_pr
        run: |
          if [ -z "${{ github.event.pull_request.number }}"]; then
            echo "is_pr=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Not a pull request event — skipping merge step."
          else
            echo "is_pr=true" >> $GITHUB_OUTPUT
            echo "✅ Pull request event detected (#${{ github.event.pull_request.number }})"
          fi

      - name: Check if PR is mergeable
        if: steps.check_pr.outputs.is_pr == 'true'
        id: mergeable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          echo "Checking if PR #$PR_NUMBER is mergeable..."

          # Fetch PR info from GitHub API
          response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER)

          mergeable=$(echo "$response" | jq -r '.mergeable')
          mergeable_state=$(echo "$response" | jq -r '.mergeable_state')

          echo "mergeable=$mergeable"
          echo "mergeable_state=$mergeable_state"

          if [ "$mergeable" != "true" ]; then
            echo "❌ Pull request has conflicts or is not mergeable (state: $mergeable_state)."
            exit 1
          fi

      - name: Merge Pull Request
        if: steps.mergeable.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          echo "Merging PR #$PR_NUMBER..."
          gh auth setup-git
          gh auth status
          gh pr merge $PR_NUMBER --merge --admin 
